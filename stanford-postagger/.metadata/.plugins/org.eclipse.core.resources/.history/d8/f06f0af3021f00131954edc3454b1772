/**
 * 
 * import weka.associations.*;
import weka.core.*;
import weka.clusterers.*;
 */


/*
import net.sf.javaml.*;
import net.sf.javaml.core.*;


import net.sf.javaml.core.DefaultDataset;
import net.sf.javaml.core.Instance;
import net.sf.javaml.tools.InstanceTools;
import net.sf.javaml.clustering.*;
import net.sf.javaml.clustering.evaluation.*;
*/

import java.util.*; 
import java.io.*;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Map;
import java.util.Scanner;
import java.util.ArrayList; 
import java.util.Collections; 
import java.util.HashMap; 
import java.util.Set;
import java.lang.Math;



import net.sf.javaml.clustering.Clusterer;
import net.sf.javaml.clustering.KMeans;
import net.sf.javaml.core.Dataset;
import net.sf.javaml.tools.data.FileHandler;

import net.sf.javaml.core.DenseInstance;
import net.sf.javaml.core.Instance;



/**
 * @author jaimeguzman
 *
 */
public class Main {

	private static Dataset setdeDatos;




	
	
	
	public static void main(String[] args) throws Exception  {
		
		String line = " ";
        File f = new File("List_INF_line_sinSW.txt");
        
        try {
            Scanner scanner = new Scanner( f );
            while (scanner.hasNextLine()) {
                line = scanner.nextLine();
                frecuencia( line  );   
            }
            scanner.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
		

        /* values of the attributes. */
        double[] values = new double[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };


        Instance instance = new DenseInstance(values);

        System.out.println("Instance with only values set: ");
        System.out.println(instance);
        System.out.println();

        Instance instanceWithClassValue = new DenseInstance(values, 1);

        System.out.println("Instance with class value set to 1: ");
        System.out.println(instanceWithClassValue);
        System.out.println();  

	
	
	}
	
	
	
	
	
	public static void frecuencia( String data ){
	
				String[] words=data.split(" ");
				HashMap<String,Integer> frequencies=new HashMap<String,Integer>();
				for (String w: Arrays.asList(words)){
				  Integer num=frequencies.get(w);
				  if (num!=null)
				    frequencies.put(w,num+1);
				  else
				    frequencies.put(w,1);
				}
	
				Set set = frequencies.entrySet(); 
				// Get an iterator 
				Iterator i = set.iterator(); 
				// Display elements from the hashmap
					while(i.hasNext()) { 
						Map.Entry me = (Map.Entry)i.next(); 
	
							int parametro = 1;
							if( (Integer)me.getValue() > parametro){  //System.out.println("EO");
	
								System.out.print(me.getKey() + ": "+ me.getValue() ); 
								//System.out.print("< "+ me.getKey() + ": "+me.getValue()+" > \n"); 
							 }else{
								 
								 System.out.println("No existe valor mayor que  "+parametro );
								 break;
							 }
							 
	
								//System.out.print(""+ me.getKey() + ": "+me.getValue()+"\n"); 
	
					} 
				System.out.println(); 
	}//endMethod
	




}