/**
 * 
 * import weka.associations.*;
import weka.core.*;
import weka.clusterers.*;
 */

import net.sf.javaml.*;
import net.sf.javaml.core.*;

import net.sf.javaml.core.Dataset;
import net.sf.javaml.core.DefaultDataset;
import net.sf.javaml.core.Instance;
import net.sf.javaml.tools.InstanceTools;


import java.util.*; 
import java.io.*;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Random;
import java.util.Scanner;
import java.util.ArrayList; 
import java.util.Collections; 
import java.util.HashMap; 
import java.util.Set;
import java.util.SortedSet;
import java.lang.Math;


/**
 * @author jaimeguzman
 *
 */
public class Main {

	/**
	 * @param args
	 * @throws FileNotFoundException 
	 */
	public static void main(String[] args) throws FileNotFoundException {
		// TODO Auto-generated method stub

		File testf= new File( "List_RES_line_sinSW.txt" );	
		Scanner sc	= new Scanner( testf ) ; 
		
		if( testf.exists() ){
			System.out.println( "ola k ace");
			
		} 
		
		
        while(     sc.hasNextLine()      ) {
            
	
 
		}
	
	
        
        Dataset data = new DefaultDataset();
        for (int i = 0; i < 10; i++) {
            Instance tmpInstance = InstanceTools.randomInstance(25);
            data.add(tmpInstance);
        }
        /* Retrieve all class values that are ever used in the data set */
        SortedSet<Object> classValues = data.classes();
        

        //Assert.assertEquals( data.noAttributes(), 25);
        //Assert.assertEquals( data.size(), 10);
        //Assert.assertEquals( classValues.size(), 0);
        
        
        
        System.out.print( data.isEmpty()    );
        
        
        
	
}
	




}